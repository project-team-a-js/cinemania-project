{"version":3,"file":"styles-Bo4DVdGf.js","sources":["../../src/js/header.js","../../src/js/footer.js","../../src/js/search-list.js","../../src/js/up-coming.js","../../src/js/weekly-trends.js"],"sourcesContent":["// Mobile Menu\r\nconst menuButton = document.querySelector(\".menu-button\");\r\nconst mobileMenu = document.querySelector(\".mobile-menu\");\r\n\r\nmenuButton.addEventListener(\"click\", myFunction);\r\n\r\nfunction myFunction() {\r\n  if (mobileMenu.style.display != \"none\") {\r\n    mobileMenu.style.display = \"block\";\r\n  } else {\r\n    mobileMenu.style.display = \"none\";\r\n  }\r\n  console.log(mobileMenu.style.display);\r\n}\r\n// Dark-Light Mode\r\nconst body = document.querySelector(\"body\"),\r\n  toggle = document.querySelector(\".toggle\");\r\n\r\nlet getMode = localStorage.getItem(\"mode\");\r\nif (getMode === \"light\") {\r\n  body.classList.add(\"light\");\r\n  toggle.classList.add(\"active\");\r\n}\r\n\r\ntoggle.addEventListener(\"click\", () => {\r\n  body.classList.toggle(\"light\");\r\n\r\n  if (body.classList.contains(\"light\")) {\r\n    return localStorage.setItem(\"mode\", \"light\");\r\n  } else {\r\n    return localStorage.setItem(\"mode\", \"dark\");\r\n  }\r\n});\r\n\r\ntoggle.addEventListener(\"click\", () => toggle.classList.toggle(\"active\"));\r\n","const modal = document.querySelector(\".modal\");\r\nconst footerLink = document.querySelector(\".footer-link\");\r\nconst footerCloseBtn = document.querySelector(\".modal-close-btn\");\r\n\r\nfunction openModal() {\r\n  modal.style.display = \"flex\";\r\n}\r\n\r\nfunction closeModal() {\r\n  modal.style.display = \"none\";\r\n}\r\n\r\nfooterLink.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  openModal();\r\n});\r\n\r\nfooterCloseBtn.addEventListener(\"click\", closeModal);\r\n","const API_KEY = \"bca6557ef64423ebe36f13a6f80e4fa5\";\r\n\r\nconst searchInput = document.getElementById(\"search-input\");\r\nconst clearBtn = document.getElementById(\"clear-btn\");\r\nconst movieList = document.getElementById(\"movie-list\");\r\nconst searchForm = document.getElementById(\"search-form\");\r\nconst pagination = document.getElementById(\"pagination\");\r\nconst yearSelect = document.getElementById(\"year-select\");\r\n\r\nlet totalPages = 24;\r\nlet currentPage = 1;\r\n\r\n// Çarpı butonu göster/gizle\r\nsearchInput.addEventListener(\"input\", () => {\r\n  clearBtn.style.display = searchInput.value ? \"inline\" : \"none\";\r\n});\r\n\r\n// Çarpı butonu temizleme\r\nclearBtn.addEventListener(\"click\", () => {\r\n  searchInput.value = \"\";\r\n  clearBtn.style.display = \"none\";\r\n  currentPage = 1;\r\n  fetchAndRenderMovies();\r\n});\r\n\r\n// Yıl seçimi değişince sayfa 1 yap ve listeyi yenile\r\nyearSelect.addEventListener(\"change\", () => {\r\n  currentPage = 1;\r\n});\r\n\r\n// Sayfa yüklendiğinde başlangıçta listeyi getir\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  fetchAndRenderMovies();\r\n  renderPagination();\r\n});\r\n\r\n// API URL'si kurucu fonksiyon\r\nfunction buildApiUrl(query, page, year) {\r\n  if (query) {\r\n    // Arama API'si\r\n    const url = new URL(\"https://api.themoviedb.org/3/search/movie\");\r\n    url.searchParams.append(\"api_key\", API_KEY);\r\n    url.searchParams.append(\"query\", query);\r\n    url.searchParams.append(\"page\", page);\r\n    if (year) {\r\n      url.searchParams.append(\"primary_release_year\", year);\r\n    }\r\n    return url.toString();\r\n  } else {\r\n    // Trend API'si\r\n    const url = new URL(\"https://api.themoviedb.org/3/discover/movie\");\r\n    url.searchParams.append(\"api_key\", API_KEY);\r\n    url.searchParams.append(\"sort_by\", \"popularity.desc\");\r\n    url.searchParams.append(\"page\", page);\r\n    if (year) {\r\n      url.searchParams.append(\"primary_release_year\", year);\r\n    }\r\n    return url.toString();\r\n  }\r\n}\r\n\r\n// Film verisini çek ve render et\r\nasync function fetchAndRenderMovies() {\r\n  const query = searchInput.value.trim();\r\n  const year = yearSelect.value;\r\n\r\n  try {\r\n    const url = buildApiUrl(query, currentPage, year);\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    if (!data.results || data.results.length === 0) {\r\n      movieList.innerHTML = `<p style=\"grid-column: 1/-1; text-align: center;\">Sonuç bulunamadı.</p>`;\r\n      totalPages = 1;\r\n      renderPagination();\r\n      return;\r\n    }\r\n\r\n    totalPages = data.total_pages > 24 ? 24 : data.total_pages;\r\n    renderMovies(data.results);\r\n    renderPagination();\r\n  } catch (err) {\r\n    console.error(\"Film verisi alınamadı:\", err);\r\n    movieList.innerHTML = `<p style=\"grid-column: 1/-1; text-align: center;\">Film verisi alınırken hata oluştu.</p>`;\r\n    totalPages = 1;\r\n    renderPagination();\r\n  }\r\n}\r\n\r\n// Arama formu gönderildiğinde\r\nsearchForm.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  currentPage = 1;\r\n  fetchAndRenderMovies();\r\n});\r\n\r\nfunction renderMovies(movies) {\r\n  const gradientDefs = `\r\n    <svg style=\"height:0; width:0; position:absolute\" aria-hidden=\"true\" focusable=\"false\">\r\n      <defs>\r\n        <linearGradient id=\"starGradientFill\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\r\n          <stop offset=\"0%\" stop-color=\"#F84119\" />\r\n          <stop offset=\"100%\" stop-color=\"rgba(248, 159, 25, 0.68)\" />\r\n        </linearGradient>\r\n        <linearGradient id=\"starGradientStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\r\n          <stop offset=\"0%\" stop-color=\"#F84119\" />\r\n          <stop offset=\"100%\" stop-color=\"rgba(248, 159, 25, 0.68)\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  `;\r\n\r\n  movieList.innerHTML =\r\n    gradientDefs +\r\n    movies\r\n      .map((movie) => {\r\n        const { poster_path, title, release_date, vote_average } = movie;\r\n        const year = release_date ? release_date.split(\"-\")[0] : \"N/A\";\r\n        const imgSrc = poster_path\r\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n          : \"https://via.placeholder.com/500x750?text=No+Image\";\r\n\r\n        const starsCount = Math.round((vote_average || 0) / 2);\r\n\r\n        const stars = Array(5)\r\n          .fill(0)\r\n          .map(\r\n            (_, i) => `\r\n            <svg class=\"star ${i < starsCount ? \"filled\" : \"\"}\" viewBox=\"0 0 24 24\" >\r\n              <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"/>\r\n            </svg>`\r\n          )\r\n          .join(\"\");\r\n\r\n        return `\r\n          <div class=\"movie-card\">\r\n            <img src=\"${imgSrc}\" alt=\"${title}\" />\r\n            <div class=\"movie-info\">\r\n              <div class=\"movie-title\">${title.toUpperCase()}</div>\r\n              <div class=\"movie-meta\">${year}</div>\r\n            </div>\r\n            <div class=\"rating-stars\">${stars}</div>\r\n          </div>\r\n        `;\r\n      })\r\n      .join(\"\");\r\n}\r\n\r\nfunction renderPagination() {\r\n  pagination.innerHTML = \"\";\r\n\r\n  const maxVisiblePages = 3;\r\n\r\n  const prevBtn = document.createElement(\"button\");\r\n  prevBtn.textContent = \"<\";\r\n  prevBtn.classList.add(\"arrow-btn\");\r\n  prevBtn.disabled = currentPage === 1;\r\n  prevBtn.onclick = () => {\r\n    if (currentPage > 1) {\r\n      currentPage--;\r\n      fetchAndRenderMovies();\r\n    }\r\n  };\r\n  pagination.appendChild(prevBtn);\r\n\r\n  // Sayfa aralığı ayarı\r\n  let startPage = currentPage;\r\n  let endPage = startPage + maxVisiblePages - 1;\r\n\r\n  if (endPage > totalPages) endPage = totalPages;\r\n\r\n  for (let i = startPage; i <= endPage; i++) {\r\n    const pageBtn = document.createElement(\"button\");\r\n    pageBtn.textContent = i.toString().padStart(2, \"0\");\r\n    pageBtn.classList.add(\"page-btn\");\r\n    if (i === currentPage) pageBtn.classList.add(\"active\");\r\n    pageBtn.onclick = () => {\r\n      currentPage = i;\r\n      fetchAndRenderMovies();\r\n    };\r\n    pagination.appendChild(pageBtn);\r\n  }\r\n\r\n  if (endPage < totalPages) {\r\n    const ellipsis = document.createElement(\"span\");\r\n    ellipsis.textContent = \"...\";\r\n    ellipsis.classList.add(\"ellipsis\");\r\n    pagination.appendChild(ellipsis);\r\n\r\n    const lastPageBtn = document.createElement(\"button\");\r\n    lastPageBtn.textContent = totalPages.toString().padStart(2, \"0\");\r\n    lastPageBtn.classList.add(\"page-btn\");\r\n    lastPageBtn.onclick = () => {\r\n      currentPage = totalPages;\r\n      fetchAndRenderMovies();\r\n    };\r\n    pagination.appendChild(lastPageBtn);\r\n  }\r\n\r\n  const nextBtn = document.createElement(\"button\");\r\n  nextBtn.textContent = \">\";\r\n  nextBtn.classList.add(\"arrow-btn\");\r\n  nextBtn.disabled = currentPage === totalPages;\r\n  nextBtn.onclick = () => {\r\n    if (currentPage < totalPages) {\r\n      currentPage++;\r\n      fetchAndRenderMovies();\r\n    }\r\n  };\r\n  pagination.appendChild(nextBtn);\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"bca6557ef64423ebe36f13a6f80e4fa5\";\r\nconst BASE_URL = \"https://api.themoviedb.org\";\r\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\";\r\n\r\nconst upcomingMovie = document.querySelector(\".upcoming-movie\");\r\n\r\nlet genresMap = new Map(); //key: ID, value: genre name\r\n\r\nasync function fetchGenres() {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/3/genre/movie/list?api_key=${API_KEY}&language=en-EN`);\r\n\r\n    response.data.genres.forEach((genre) => {\r\n      genresMap.set(genre.id, genre.name);\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error fetching movie genres:\", error);\r\n  }\r\n}\r\n\r\nfunction getGenresNames(genreIds) {\r\n  return genreIds.map((id) => genresMap.get(id) || \"Unknown Genre\").join(\", \");\r\n}\r\n\r\nfunction getMonthDateRange() {\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = today.getMonth();\r\n\r\n  const firstDay = new Date(year, month, 1); //ayın ilk günü\r\n  const lastDay = new Date(year, month + 1, 0); //ayın son günü(bir sonraki ayın 0.günü)\r\n\r\n  const formatedDate = (date) => {\r\n    const yyyy = date.getFullYear();\r\n    const mm = String(date.getMonth() + 1).padStart(2, \"0\"); // Ayı iki basamaklı yap\r\n    const dd = String(date.getDate()).padStart(2, \"0\"); // Günü iki basamaklı yap\r\n\r\n    return `${yyyy}-${mm}-${dd}`;\r\n  };\r\n\r\n  return {\r\n    startDate: formatedDate(firstDay),\r\n    endDate: formatedDate(lastDay),\r\n  };\r\n}\r\n\r\nfunction myLibraryButtonUpdate(button, movieID) {\r\n  if (isMovieInLibrary(movieID)) {\r\n    button.textContent = \"Remove from My Library\";\r\n  } else {\r\n    button.textContent = \"Add to My Library\";\r\n  }\r\n}\r\n\r\nfunction displayMovie(movie) {\r\n  let imageUrl, srcset, sizes, imageClass;\r\n\r\n  const windowWidth = window.innerWidth;\r\n\r\n  if (windowWidth >= 1280 && movie.backdrop_path) {\r\n    // DESKTOP için backdrop_path\r\n    imageUrl = `https://image.tmdb.org/t/p/w1280${movie.backdrop_path}`;\r\n    srcset = ` https://image.tmdb.org/t/p/w780${movie.backdrop_path} 780w,\r\n        https://image.tmdb.org/t/p/w1280${movie.backdrop_path} 1280w,\r\n        https://image.tmdb.org/t/p/original${movie.backdrop_path} 1920w\r\n        `;\r\n    sizes = `(min-width: 1280px) 805px`;\r\n    imageClass = \"movie-image-backdrop\";\r\n  } else if (windowWidth >= 768 && movie.backdrop_path) {\r\n    // TABLET için backdrop_path (768px ile 1279px arası)\r\n    imageUrl = `https://image.tmdb.org/t/p/w780${movie.backdrop_path}`;\r\n    srcset = ` https://image.tmdb.org/t/p/w300${movie.backdrop_path} 300w,\r\n        https://image.tmdb.org/t/p/w780${movie.backdrop_path} 780w\r\n        `;\r\n    sizes = `(min-width: 768px) 704px,\r\n        (max-width: 1279px) 704px`;\r\n    imageClass = \"movie-image-backdrop\";\r\n  } else {\r\n    // MOBİL için poster_path (320px ile 767px arası)\r\n    imageUrl = movie.poster_path\r\n      ? `https://image.tmdb.org/t/p/w342${movie.poster_path}`\r\n      : \"https://via.placeholder.com/320x460?text=Görsel+Yok\";\r\n    srcset = ` https: //image.tmdb.org/t/p/w185${movie.poster_path} 185w,\r\n        https://image.tmdb.org/t/p/w342${movie.poster_path} 342w,\r\n        https://image.tmdb.org/t/p/w500${movie.poster_path} 500w\r\n        `;\r\n    sizes = `(max-width: 320px) 280px,\r\n        (max-width: 767px) 280px`;\r\n    imageClass = \"movie-image-poster\";\r\n  }\r\n\r\n  const releaseDate = movie.release_date\r\n    ? new Date(movie.release_date).toLocaleDateString()\r\n    : \"Unknown Release Date\";\r\n  const voteAverage = movie.vote_average\r\n    ? movie.vote_average.toFixed(1)\r\n    : \"\";\r\n  const voteCount = movie.vote_count\r\n    ? movie.vote_count.toLocaleString()\r\n    : \"\";\r\n  const genres = getGenresNames(movie.genre_ids);\r\n\r\n  const movieTitle = movie.title.toUpperCase();\r\n\r\n    upcomingMovie.innerHTML = `\r\n    <div class=\"upcoming-movie-container\">\r\n        <img src=\"${imageUrl}\" \r\n            srcset=\"${srcset.trim()}\" \r\n            sizes=\"${sizes.trim()}\" \r\n            class=\"movieImage ${imageClass}\"\r\n            alt=\"${movie.title} Poster Görseli\"/>\r\n        <div class=\"upcoming-info\">\r\n            <p class=\"upcoming-title\">${movieTitle}</p>\r\n            <div class=\"upcoming-info-details\">\r\n                <div class=\"info-tablet-details\">\r\n                    <div class=\"info-detail\">\r\n                        <p class=\"info-p\">Release Date</p>\r\n                        <span class=\"info-span info-color\">${releaseDate}</span>\r\n                    </div>\r\n                    <div class=\"info-detail\">\r\n                        <p class=\"info-p\">Vote / Votes</p>\r\n                        <div class=\"info-votes-container\">\r\n                          <span class=\"info-span info-votes\">${voteAverage}</span>\r\n                          <p> / </p>\r\n                          <span class=\"info-span info-votes\">${voteCount}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"info-tablet-details\">\r\n                    <div class=\"info-detail\">\r\n                        <p class=\"info-p\">Popularity</p>\r\n                        <span class=\"info-span\">${movie.popularity.toFixed(2)}</span>\r\n                    </div>\r\n                    <div class=\"info-detail\">\r\n                        <p class=\"info-p\">Genres</p>\r\n                        <span class=\"info-span\">${genres}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div class=\"upcoming-about\">\r\n                <p class=\"info-p info-about\">ABOUT</p>\r\n                <p class=\"info-p\">${movie.overview}</p>\r\n            </div>\r\n            <button class=\"addLibrary\" data-id=\"${\r\n              movie.id\r\n            }\">Add to My Library</button>\r\n        </div>\r\n    </div>`;\r\n\r\n  const addLibraryButton = upcomingMovie.querySelector(\".addLibrary\");\r\n  myLibraryButtonUpdate(addLibraryButton, movie.id);\r\n\r\n  addLibraryButton.addEventListener(\"click\", () => {\r\n    const movieID = parseInt(addLibraryButton.getAttribute(\"data-id\"));\r\n    let myLibrary = getMyLibrary();\r\n\r\n    if (isMovieInLibrary(movieID)) {\r\n      myLibrary = myLibrary.filter((id) => id !== movieID);\r\n      localStorage.setItem(\"myLibrary\", JSON.stringify(myLibrary));\r\n    } else {\r\n      setMyLibrary(movieID);\r\n    }\r\n\r\n    myLibraryButtonUpdate(addLibraryButton, movieID);\r\n  });\r\n}\r\n\r\nasync function randomUpcomingMovie() {\r\n  await fetchGenres();\r\n\r\n  const { startDate, endDate } = getMonthDateRange();\r\n\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/3/discover/movie`,\r\n      {\r\n        params: {\r\n          api_key: API_KEY,\r\n          \"primary_release_date.gte\": startDate,\r\n          \"primary_release_date.lte\": endDate,\r\n          sort_by: \"popularity.desc\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const movies = response.data.results;\r\n\r\n    if (movies && movies.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * movies.length);\r\n      const randomMovie = movies[randomIndex];\r\n      displayMovie(randomMovie);\r\n    } else {\r\n      upcomingMovie.innerHTML =\r\n        \"<p>No upcoming movies found for this month.</p>\";\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching upcoming movies:\", error);\r\n  }\r\n}\r\n\r\n//LocalStorage veri ekleme\r\nfunction setMyLibrary(movieID) {\r\n  let myLibrary = getMyLibrary();\r\n  myLibrary = myLibrary ? myLibrary : [];\r\n\r\n  if (!myLibrary.includes(movieID)) {\r\n    myLibrary.push(movieID);\r\n    localStorage.setItem(\"myLibrary\", JSON.stringify(myLibrary));\r\n  }\r\n}\r\n\r\n//LocalStorage veriler al\r\nfunction getMyLibrary() {\r\n  const library = localStorage.getItem(\"myLibrary\");\r\n  return library ? JSON.parse(library) : [];\r\n}\r\n\r\nfunction removeFromLibrary(movieID) {\r\n  let myLibrary = getMyLibrary();\r\n  myLibrary = myLibrary.filter((id) => id !== movieID);\r\n  localStorage.setItem(\"myLibrary\", JSON.stringify(myLibrary));\r\n}\r\n\r\nfunction isMovieInLibrary(movieID) {\r\n  const myLibrary = getMyLibrary();\r\n  return myLibrary.includes(movieID);\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", randomUpcomingMovie);\r\n","const options = {\r\n  method: \"GET\",\r\n  headers: {\r\n    accept: \"application/json\",\r\n    Authorization:\r\n      \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDA5M2Y5MzcwZWVhYjYyZGRhZDEyMTViYTMzYzdkYyIsIm5iZiI6MTc0Mzc5MjUzNi41MTMsInN1YiI6IjY3ZjAyOTk4ZjVhODBhYTU0NTk5NTM5MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kD8CV4_F8L2GVoP85qrIIvPuEascfTURrC1KNOeDj4Q\",\r\n  },\r\n};\r\n\r\nlet genreMap = {}; // Dinamik olarak tür isimlerini tutacağız\r\n\r\n// Genre listesini çek\r\nfunction fetchGenres() {\r\n  return fetch(\r\n    \"https://api.themoviedb.org/3/genre/movie/list?language=en-US\",\r\n    options\r\n  )\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      data.genres.forEach((genre) => {\r\n        genreMap[genre.id] = genre.name;\r\n      });\r\n    });\r\n}\r\n\r\n// ID'leri isimlere çevir\r\nfunction getGenreNames(genreIds) {\r\n  return genreIds\r\n    .map((id) => genreMap[id])\r\n    .filter(Boolean)\r\n    .slice(0, 2);\r\n}\r\n\r\n// Ana veri yükleme\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const theme = localStorage.getItem(\"theme\");\r\n  const cardContainer = document.getElementById(\"weekly-cards\");\r\n  const loader = document.getElementById(\"loader-weekly\");\r\n\r\n  // Önce türleri çek, sonra filmleri\r\n  fetchGenres().then(() => {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/trending/all/day?language=en-US\",\r\n      options\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const movies = data.results.slice(0, 3);\r\n        cardContainer.innerHTML = \"\";\r\n        loader.style.display = \"none\";\r\n\r\n        movies.forEach((movie) => {\r\n          const imageUrl = movie.poster_path\r\n            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n            : \"https://via.placeholder.com/500x750?text=No+Image\";\r\n\r\n          const title = movie.title || movie.name || \"Untitled\";\r\n          const genres = getGenreNames(movie.genre_ids).join(\", \");\r\n          const releaseYear = (\r\n            movie.release_date ||\r\n            movie.first_air_date ||\r\n            \"Unknown\"\r\n          ).split(\"-\")[0];\r\n\r\n          const rating = Math.round((movie.vote_average || 0) * 10) / 10;\r\n\r\n          const maxStars = 5;\r\n          const fullStars = Math.floor(rating / 2);\r\n          const halfStar = rating % 2 >= 1 ? 1 : 0;\r\n          const emptyStars = maxStars - fullStars - halfStar;\r\n\r\n          const stars = [\r\n            ...Array(fullStars).fill(\r\n              '<svg class=\"star-weekly full\"><use xlink:href=\"#icon-star\"></use></svg>'\r\n            ),\r\n            ...Array(halfStar).fill(\r\n              '<svg class=\"star-weekly half\"><use xlink:href=\"#icon-star-half\"></use></svg>'\r\n            ),\r\n            ...Array(emptyStars).fill(\r\n              '<svg class=\"star-weekly empty\"><use xlink:href=\"#icon-star-outline\"></use></svg>'\r\n            ),\r\n          ].join(\"\");\r\n\r\n          const card = document.createElement(\"div\");\r\n          card.className = \"card-weekly\";\r\n          card.style.backgroundImage = `url(${imageUrl})`;\r\n          card.style.backgroundSize = \"cover\";\r\n          card.style.backgroundPosition = \"center\";\r\n          card.style.display = \"flex\";\r\n          card.style.alignItems = \"flex-end\";\r\n          card.style.borderRadius = \"10px\";\r\n          card.style.position = \"relative\";\r\n          card.style.overflow = \"hidden\";\r\n          card.style.boxShadow =\r\n            \" linear-gradient(180deg, rgba(0, 0, 0, 0) 63.48%, rgba(0, 0, 0, 0.9) 92.16%)\";\r\n\r\n          card.innerHTML = `\r\n            <div class=\"card-weekly-content\">\r\n            <div class=\"card-info\">\r\n              <h3>${title}</h3>\r\n              <p>${genres} | ${releaseYear}</p>\r\n              </div>\r\n              <span class=\"star-weekly\">${stars}</span>\r\n            </div>\r\n            \r\n          `;\r\n\r\n          cardContainer.appendChild(card);\r\n\r\n          card.addEventListener(\"click\", () => {\r\n            openModal(movie);\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching data:\", err);\r\n        cardContainer.innerHTML = \"<p>Error loading movies.</p>\";\r\n        loader.style.display = \"none\";\r\n      });\r\n  });\r\n});\r\n"],"names":["menuButton","mobileMenu","myFunction","body","toggle","getMode","modal","footerLink","footerCloseBtn","openModal","closeModal","event","API_KEY","searchInput","clearBtn","movieList","searchForm","pagination","yearSelect","totalPages","currentPage","fetchAndRenderMovies","renderPagination","buildApiUrl","query","page","year","url","data","renderMovies","err","movies","gradientDefs","movie","poster_path","title","release_date","vote_average","imgSrc","starsCount","stars","_","i","maxVisiblePages","prevBtn","startPage","endPage","pageBtn","ellipsis","lastPageBtn","nextBtn","BASE_URL","upcomingMovie","genresMap","fetchGenres","axios","genre","error","getGenresNames","genreIds","id","getMonthDateRange","today","month","firstDay","lastDay","formatedDate","date","yyyy","mm","dd","myLibraryButtonUpdate","button","movieID","isMovieInLibrary","displayMovie","imageUrl","srcset","sizes","imageClass","windowWidth","releaseDate","voteAverage","voteCount","genres","movieTitle","addLibraryButton","myLibrary","getMyLibrary","setMyLibrary","randomUpcomingMovie","startDate","endDate","randomIndex","randomMovie","library","options","genreMap","res","getGenreNames","cardContainer","loader","releaseYear","rating","maxStars","fullStars","halfStar","emptyStars","card"],"mappings":"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"}